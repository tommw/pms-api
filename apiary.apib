FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# PMS API

Interface to consume data from the Property Management System

# Group Property resources

## A property is a lettable property [/property]

### List all properties [GET]

+ Response 200 (application/json)


        {
            "results": [
                {
                    "propId": "10006",
                    "url": "http://private-5bb1f-pmsapi1.apiary-mock.com/property/pintail-cottage",
                    "slug": "pintail-cottage",
                    "name": "Pintail Cottage",
                    "status": "approved",
                    "address": {
                                "house_no": "5",
                                "street": "Pintail Avenue",
                                "town": "Saltings Reach",
                                "city": "Lelant",
                                "county": "Cornwall",
                                "postcode": "TR27 6GN"
                            },
                    "coordinates": {
                        "latitude": 52.2345,
                        "longitude": 1.2345
                    },
                    "location": {
                        "id": "38",
                        "name": "Lelant & Saltings Reach",
                        "slug": "lelant-saltings"
                    },
                    "sleeps": 6,
                    "bedrooms": {
                        "total": 3,
                        "superking": 0,
                        "king": 0,
                        "double": 1,
                        "twin": 2,
                        "zipnlock": 0,
                        "other": 0,
                        "information": ""
                    },
                    "bathrooms": {
                        "en-suite":1,
                        "standard":1,
                        "wc":1,
                        "other":0
                    },
                    "gemsRating": 4,
                    "goLiveDate": "2016-05-09",
                    "features": {
                        "pets": true,
                        "children": true,
                        "disabled": false,
                        "parking": true,
                        "wifi": true,
                        "crib": false,
                        "seaviews": false,
                        "closetobeach": true,
                        "woodburner": true,
                        "washingmachine": true,
                        "tumbledryer": false,
                        "pool": false,
                        "cot": true
                    }
                    "managed": true,
                    "minibreaks": true,
                    "boutique": true,
                    "changeOverDay": "Friday",
                    "checkInTime": "4:30pm",
                    "checkOutTime": "10:00am",
                    "images": [
                        {
                            "filename": "001.jpg",
                            "alt": "Pintail Cottage",
                            "width": 640,
                            "height": 480,
                            "url": "https://assets.cornishgems.com/properties/pintail-cottage/001.jpg"
                        }
                    ],
                    "specialOffers": [
                         {
                            "discountCode": "X10250517X",
                            "fromDate": "2017-05-25",
                            "toDate": "2017-06-01",
                            "description": "10% Discount for week commencing 25th May 2017",
                            "type": "%",
                            "amount": 10
                         }
                    ],
                    "calendar": "http://pmsapi1.apiary.io/property/pintail-cottage/calendar",
                    "booking": "http://pmsapi1.apiary.io/booking"
                }
            ]
        }


## A property is a lettable property [/property/{slug}]

+ Parameters
    + slug (string) - reference slug of the property resource in the form of a string

### Retrieve an individual property resource [GET]

+ Response 200 (application/json)

        {
            "propId": "10006",
            "url": "http://private-5bb1f-pmsapi1.apiary-mock.com/property/pintail-cottage",
            "slug": "pintail-cottage",
            "name": "Pintail Cottage",
            "status": "approved",
            "address": {
                        "house_no": "5",
                        "street": "Pintail Avenue",
                        "town": "Saltings Reach",
                        "city": "Lelant",
                        "county": "Cornwall",
                        "postcode": "TR27 6GN"
                    },
            "coordinates": {
                "latitude": 52.2345,
                "longitude": 1.2345
            },
            "location": {
                "id": "38",
                "name": "Lelant & Saltings Reach",
                "slug": "lelant-saltings"
            },
            "sleeps": 6,
            "bedrooms": {
                "total": 3,
                "superking": 0,
                "king": 0,
                "double": 1,
                "twin": 2,
                "zipnlock": 0,
                "other": 0,
                "information": ""
            },
            "bathrooms": {
                "en-suite":1,
                "standard":1,
                "wc":1,
                "other":0
            },
            "gemsRating": 4,
            "goLiveDate": "2016-05-09",
            "features": {
                "pets": true,
                "children": true,
                "disabled": false,
                "parking": true,
                "wifi": true,
                "crib": false,
                "seaviews": false,
                "closetobeach": true,
                "woodburner": true,
                "washingmachine": true,
                "tumbledryer": false,
                "pool": false,
                "cot": true
            }
            "managed": true,
            "minibreaks": true,
            "boutique": true,
            "changeOverDay": "Friday",
            "checkInTime": "4:30pm",
            "checkOutTime": "10:00am",
            "images": [
                {
                    "filename": "001.jpg",
                    "alt": "Pintail Cottage",
                    "width": 640,
                    "height": 480,
                    "url": "https://assets.cornishgems.com/properties/pintail-cottage/001.jpg"
                }
            ],
            "specialOffers": [
                 {
                    "discountCode": "X10250517X",
                    "fromDate": "2017-05-25",
                    "toDate": "2017-06-01",
                    "description": "10% Discount for week commencing 25th May 2017",
                    "type": "%",
                    "amount": 10
                 }
            ],
            "calendar": "http://pmsapi1.apiary.io/property/pintail-cottage/calendar",
            "booking": "http://pmsapi1.apiary.io/booking"
        }


## Retrieve a map of calendar data for a Property [/property/{property_slug}/availability]

+ Parameters
    + property_slug (string) - reference ID of the property resource in the form of a string

### Retrieve availability calendar data for a Property [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]
        
## Retrieve customer feedback for a Property [/property/{property_slug}/feedback]

+ Parameters
    + property_slug (string) - reference ID of the property resource in the form of a string

### Feedback [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]        

## Retrieve bookings associated with a Property [/property/{property_slug}/booking]

+ Parameters
    + property_slug (string) - reference ID of the property resource in the form of a string

### Booking [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]  

## Retrieve weekly tariffs for a Property [/property/{property_slug}/tariff/{year}]

+ Parameters
    + property_slug (string) - reference ID of the property resource in the form of a string
    + year (number) - the year in the form of an integer

### Tariff [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]  
        
## Retrieve weekly tariffs for a Property [/property/{property_slug}/tariff/{year}/{month}]

+ Parameters
    + property_slug (string) - reference ID of the property resource in the form of a string
    + year (number) - full numeric representation of a year (4 digits) in the form of an integer
    + month (number) - numeric representation of the month without leading zeros in the form of an integer 

### Tariff [GET]

+ Response 200 (application/json)

        [
            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]         


# Group Last minute offers

## Last minute offers [/offer/lastminute]

### Get a list of offers [GET]

+ Response 200

        [
            {
                "type": "%",
                "amount": 15
                "daysToHolidayMin": 0,
                "daysToHolidayMax": 7,
                "description": "15% off bookings made within 7 days of the start date",
                "properties": [
                    "mousecott_SS"
                ]
            },
            {
                "type": "%",
                "amount": 10
                "daysToHolidayMin": 7,
                "daysToHolidayMax": 14,
                "description": "10% off bookings made between 8 and 14 days before the start date",
                "properties": [
                    "mousecott_SS"
                ]
            },
        ]


# Group Booking resources

## Create a booking [/booking]

Lorem ipsum...

### Create a new booking [POST]

+ Request (application/json)

        {
            "question": "Favourite programming language?",
            "choices": [
                "Swift",
                "Python",
                "Objective-C",
                "Ruby"
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 0
                    }, {
                        "choice": "Python",
                        "votes": 0
                    }, {
                        "choice": "Objective-C",
                        "votes": 0
                    }, {
                        "choice": "Ruby",
                        "votes": 0
                    }
                ]
            }
            
# Group Guest resources

## Guest [/guest/{guest_id}]

+ Parameters
    + guest_id (integer) - guest ID in the form of an integer

### Get an individual customer [GET]

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 0
                    }, {
                        "choice": "Python",
                        "votes": 0
                    }, {
                        "choice": "Objective-C",
                        "votes": 0
                    }, {
                        "choice": "Ruby",
                        "votes": 0
                    }
                ]
            }           
            
### Update a guest's details [PUT]   

+ Request (application/json)

        {
            "question": "Favourite programming language?",
            "choices": [
                "Swift",
                "Python",
                "Objective-C",
                "Ruby"
            ]
        }

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 0
                    }, {
                        "choice": "Python",
                        "votes": 0
                    }, {
                        "choice": "Objective-C",
                        "votes": 0
                    }, {
                        "choice": "Ruby",
                        "votes": 0
                    }
                ]
            }
            
## Guest bookings [/guest/{guest_id}/bookings]

+ Parameters
    + guest_id (integer) - guest ID in the form of an integer

### Get a list of bookings associated with a Guest [GET]

+ Response 201 (application/json)

    + Headers

            Location: /questions/2

    + Body

            {
                "question": "Favourite programming language?",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 0
                    }, {
                        "choice": "Python",
                        "votes": 0
                    }, {
                        "choice": "Objective-C",
                        "votes": 0
                    }, {
                        "choice": "Ruby",
                        "votes": 0
                    }
                ]
            }     
            
# Group Owner resources

## Owner [/owner/JBLOG]

### Get an owner [GET]

+ Response 200

        {
            "reference" : "JBLOG",
            "brandCode" : "SS",
            "accountingBrandCode" : "SS",
            "name": {
                "title": "Mr",
                "firstName": "J",
                "surname": "Bloggs",
                "salutation": "Joe"
            },
            "address": {
                "addr1": "Carlton House",
                "addr2": "Market Place",
                "town": "Reepham",
                "county": "Norfolk",
                "postcode": "NR10 4JJ",
                "country": "GB"
            },
            "daytimePhone": "01603 871872",
            "eveningPhone": "01603 872871",
            "mobilePhone": "07999 123456",
            "email": "support@carltonsoftware.co.uk",
            "fax": "01603 871872",
            "bankAccountDetails": {
                "bankAccountName": "MR J BLOGGS",
                "bankAccountNumber": "87560824",
                "bankAccountSortCode": "12-34-56",
                "bankName": "HSBC",
                "bankAddress": {
                    "addr1": "HSBC",
                    "addr2": "Market Place",
                    "town": "Reepham",
                    "county": "Norfolk",
                    "postcode": "NR10 4JJ",
                    "country": "GB"
                },
                "bankReference": "",
                "bankPaymentReference": "",
                "vatNumber": "",
                "vatRegistered": false
            },
            "postConfirmations": true,
            "emailConfirmations": true,
            "properties": [
                {
                    "reference": "mousecott",
                    "brandCode": "SS"
                }
            ]
        }


### Update an owner [PUT]

+ Request (application/json)

        {
            "reference" : "JBLOG",
            "brandCode" : "SS",
            "accountingBrandCode" : "SS",
            "name": {
                "title": "Mr",
                "firstName": "J",
                "surname": "Bloggs",
                "salutation": "Joe"
            },
            "address": {
                "addr1": "Carlton House",
                "addr2": "Market Place",
                "town": "Reepham",
                "county": "Norfolk",
                "postcode": "NR10 4JJ",
                "country": "GB"
            },
            "daytimePhone": "01603 871872",
            "eveningPhone": "01603 872871",
            "mobilePhone": "07999 123456",
            "email": "support@carltonsoftware.co.uk",
            "fax": "01603 871872",
            "bankAccountDetails": {
                "bankAccountName": "MR J BLOGGS",
                "bankAccountNumber": "87560824",
                "bankAccountSortCode": "12-34-56",
                "bankName": "HSBC",
                "bankAddress": {
                    "addr1": "HSBC",
                    "addr2": "Market Place",
                    "town": "Reepham",
                    "county": "Norfolk",
                    "postcode": "NR10 4JJ",
                    "country": "GB"
                },
                "bankReference": "",
                "bankPaymentReference": "",
                "vatNumber": "",
                "vatRegistered": false
            },
            "postConfirmations": true,
            "emailConfirmations": true,
            "properties": [
                {
                    "reference": "mousecott",
                    "brandCode": "SS"
                }
            ]
        }

+ Response 204


## Authenticate an owner [/owner/JBLOG/password/authenticate]

### Authenticate an owner [PUT]

+ Request (application/json)

        {
            "password": "apassword"
        }

+ Response 204


## Set an owners password [/owner/JBLOG/password]

### Set an owner password [PUT]

+ Request (application/json)

        {
            "password": "apassword"
        }

+ Response 204


## Owner documents [/owner/JBLOG/document]

### Get a list of owner documents [GET]

+ Response 200

        [
            {
                "id": 1,
                "filename": "statement.pdf",
                "mimetype": "application/pdf",
                "type": "statement"
            }
        ]


## Owner document [/owner/JBLOG/document/1]

### Get a specific owner document [GET]

+ Response 200

        {
            "id": 1,
            "filename": "statement.pdf",
            "mimetype": "application/pdf",
            "type": "statement"
        }


## Owner document [/owner/JBLOG/document/1/data]

### Retrieve the document data [GET]

+ Response 200